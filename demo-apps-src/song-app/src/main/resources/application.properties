%prod.mp.messaging.outgoing.songs.bootstrap.servers=my-cluster-kafka-bootstrap:9092
#%dev.mp.messaging.outgoing.songs.bootstrap.servers=localhost:36091
mp.messaging.outgoing.songs.connector=smallrye-kafka
mp.messaging.outgoing.songs.topic=songs
mp.messaging.outgoing.songs.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.songs.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.outgoing.songs.bootstrap.servers=kafka:9092
quarkus.http.port=8080
quarkus.micrometer.binder.kafka.enabled=true
# quarkus.container-image.group=rhdevelopers
# quarkus.container-image.name=kafka-tutorial-song-app
# quarkus.container-image.tag=quarkus
# quarkus.container-image.registry=quay.io

# quarkus.kubernetes.service-type=load-balancer
# OpenTelemetry
quarkus.application.name=song-app 
quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317 
#quarkus.otel.exporter.otlp.traces.headers=authorization=Bearer my_secret 
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
