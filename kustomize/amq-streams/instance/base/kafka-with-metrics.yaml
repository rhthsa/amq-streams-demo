apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-demo
  labels:
    app.kubernetes.io/instance: amq-streams-demo
    strimzi.io/cluster: kafka-demo
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "100"
spec:
  kafka:
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
    jmxOptions:
      authentication:
        type: password
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yaml
    storage:
      type: persistent-claim
      size: 50Gi
      class: gp3-csi
    jvmOptions:
      '-Xms': 100m
      '-Xmx': 1024m
      gcLoggingEnabled: true
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    version: 3.4.0
    replicas: 3
  entityOperator:
    topicOperator: {}
    userOperator: {}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: cruise-control-metrics-config.yaml
  zookeeper:
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    jmxOptions:
      authentication:
        type: password
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    storage:
      type: persistent-claim
      size: 50Gi
      class: gp3-csi
    jvmOptions:
      '-Xms': 300m
      '-Xmx': 1024m
      gcLoggingEnabled: true
    logging:
      type: inline
    replicas: 3
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yaml
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
